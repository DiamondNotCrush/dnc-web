var app=window.app=angular.module("app",["ngAnimate","ngResource","ngCookies","ui.router","snap","media","app.main","app.view","app.login","app.signup","app.account","factory.user","service.view","service.auth","service.session"]).config(["$stateProvider","$urlRouterProvider","$locationProvider","$compileProvider",function($stateProvider,$urlRouterProvider,$locationProvider,$compileProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("main",{controller:"mainController",controllerAs:"main",templateUrl:"main/main.html",requiresLogin:!0}).state("view",{url:"/",controller:"viewController",controllerAs:"view",templateUrl:"view/view.html",parent:"main",title:"Media Player",requiresLogin:!0}).state("login",{controller:"loginController",controllerAs:"login",templateUrl:"login/login.html"}).state("signup",{controller:"signupController",controllerAs:"signup",templateUrl:"signup/signup.html"}).state("account",{controller:"accountController",controllerAs:"account",templateUrl:"account/account.html",parent:"main",title:"Account Settings",requiresLogin:!0}),$locationProvider.html5Mode(!0),$compileProvider.debugInfoEnabled(!1)}]).run(["$rootScope","$state","user",function($rootScope,$state,user){user.get(),$rootScope.$on("$stateChangeStart",function(event,toState,toParams,fromState,fromParams){toState.requiresLogin&&!user.details.isAuthorized&&($state.transitionTo("login"),event.preventDefault())})}]);angular.module("app.main",[]).controller("mainController",["$state","user",function($state,user){var _this=this;_this.state=$state,_this.logout=function(){user.destroy(),$state.go("login")}}]),angular.module("app.view",[]).controller("viewController",["view","user",function(view,user){var _this=this;_this.user=user.details,_this.showAudio=!1,_this.showVideo=!0,_this.mediaSrc="",_this.setFilter=function(filter){_this.filter="","audio"===filter&&(_this.filter={isAudio:!0}),"video"===filter&&(_this.filter={isVideo:!0})},_this.play=function(file){var video=document.getElementsByTagName("video")[0];video.src=file.url,video.load()},_this.getLibrary=function(){view.Files.query({id:_this.user.id}).$promise.then(function(files){_this.files=files})},_this.getLibrary()}]),angular.module("service.view",[]).service("view",["$resource","user",function($resource,user){return{Files:$resource("/connection/library/:id",{id:"@id"})}}]),angular.module("service.auth",[]).service("auth",["$resource",function($resource){return $resource("",null,{login:{method:"POST",url:"/user/login"},update:{method:"POST",url:"/user/update"},register:{method:"POST",url:"/user/addUser"},get:{method:"GET",url:"/findUser/:id",params:{id:"@id"}}})}]),angular.module("app.login",[]).controller("loginController",["$state","user",function($state,user){var _this=this;_this.userDetails=user.details,_this.email="",_this.password="",_this.register=!1,_this.userDetails&&_this.userDetails.isAuthorized&&$state.go("view"),_this.login=function(valid){if(valid){if(_this.register&&_this.password2!==_this.password)return void(_this.passwordMatch=!1);var details=_this.register?{email:_this.email,password:_this.password,username:_this.username}:{email:_this.email,password:_this.password};user.auth(details,_this.register?"register":"login",function(err,res){!err&&res&&res.isAuthorized?$state.go("view"):(_this.password="",_this.password2="",_this.invalidLogin=!0)})}}}]),angular.module("service.session",[]).service("session",["$cookieStore",function($cookieStore){function _store(name,data,persist){persist=persist||!1,localStoreAvailable?(angular.isObject(data)||angular.isArray(data)||angular.isNumber(+data||data))&&window[persist?"localStorage":"sessionStorage"].setItem(name,angular.toJson(data)):$cookieStore.put(name,data)}function getItem(name){var data,localData=localStorage.getItem(name),sessionData=sessionStorage.getItem(name);return data=sessionData||localData,"[object Object]"!==data&&void 0!==data&&null!==data&&data.length?"{"===data.charAt(0)||"["===data.charAt(0)||angular.isNumber(data)?angular.fromJson(data):data:void 0}var localStoreAvailable="undefined"!=typeof Storage,_this=this;return _this.store=function(name,details){_store(name,details,!1)},_this.persist=function(name,details){_store(name,details,!0)},_this.get=function(name){return localStoreAvailable?getItem(name):$cookieStore.get(name)},_this.destroy=function(name){localStoreAvailable?(localStorage.removeItem(name),sessionStorage.removeItem(name)):$cookieStore.remove(name)},_this}]),angular.module("factory.user",[]).factory("user",["$state","auth","session",function($state,auth,session){function resetUser(){return{username:"Anon",isAuthorized:!1,id:0}}var _user=this;return _user.details=resetUser(),_user.get=function(){var temp=session.get("user");temp&&temp.isAuthorized&&(_user.details=temp)},_user.destroy=function(){session.destroy("user"),_user.details=resetUser()},_user.store=function(user){_user.details.username=user.username,_user.details.email=user.email,_user.details.id=user.id,_user.details.isAuthorized=user.id>0,session.store("user",_user.details)},_user.auth=function(user,authtype,callback){auth[authtype](user).$promise.then(function(res){_user.store(res),callback&&callback(null,_user.details)})["catch"](function(err){callback&&callback(err,null)})},_user.update=function(data,callback){data.id=_user.details.id,auth.update(data).$promise.then(function(res){_user.store(res),callback&&callback(null,_user.details)})["catch"](function(err){callback&&callback(err,null)})},_user}]),angular.module("app.account",[]).controller("accountController",["$state","user",function($state,user){var _this=this;_this.currentPassword="",_this.newPassword="",_this.confirmPassword="",_this.newEmail="",_this.update=function(valid){valid&&user.update({password:_this.currentPassword,newPassword:_this.newPassword,email:_this.newEmail},function(err,res){err||$state.go("view")})},_this.updatePassword=function(valid){valid&&(_this.confirmPassword!==_this.newPassword?_this.passwordMatch=!1:_this.update(!0))}}]),angular.module("app.signup",[]).controller("signupController",["user",function(user){var _this=this;_this.user=user.details,_this.register=function(){user.auth(_this.email,_this.password,"signup",function(){})}}]);